universe = vanilla

executable = forward_Bs_length.sh

output = log/forward_Bs-$(Cluster)-$(Process).out
error = log/forward_Bs-$(Cluster)-$(Process).err
log = log/forward_Bs-$(Cluster)-$(Process).log

+ProjectName = "PathSpaceHMC"

Requirements = (OSGVO_OS_STRING == "RHEL 6" && HAS_MODULES == true)

# arguments are
# 1: number of paths to generate (use this to tune machine run time)
#      this should be approx 550000/argv[3]*1800 for 30 min runs
# 2: boundary conditions {0:no pinning, 1:start pinned, 2: start and end pinned, 3: start pinned reversed BCs, 4: start and end pinned reversed BCs}
# 3: path length

NumRuns=100

Arguments = 10000 1 1000
transfer_input_files = forward_Bs_length.py
queue $(NumRuns)
#Arguments = 10000 1 2000
#transfer_input_files = forward_Bs_length.py
#queue $(NumRuns)
#Arguments = 10000 1 4000
#transfer_input_files = forward_Bs_length.py
#queue $(NumRuns)
#Arguments = 10000 1 6000
#transfer_input_files = forward_Bs_length.py
#queue $(NumRuns)
#Arguments = 10000 1 8000
#transfer_input_files = forward_Bs_length.py
#queue $(NumRuns)
#Arguments = 10000 1 10000
#transfer_input_files = forward_Bs_length.py
#queue $(NumRuns)
#Arguments = 10000 1 15000
#transfer_input_files = forward_Bs_length.py
#queue $(NumRuns)
#Arguments = 10000 1 20000
#transfer_input_files = forward_Bs_length.py
#queue $(NumRuns)
#Arguments = 10000 1 30000
#transfer_input_files = forward_Bs_length.py
#queue $(NumRuns)
#Arguments = 10000 1 40000
#transfer_input_files = forward_Bs_length.py
#queue $(NumRuns)
#Arguments = 10000 1 60000
#transfer_input_files = forward_Bs_length.py
#queue $(NumRuns)
#Arguments = 10000 1 80000
#transfer_input_files = forward_Bs_length.py
#queue $(NumRuns)
#Arguments = 10000 1 100000
#transfer_input_files = forward_Bs_length.py
#queue $(NumRuns)

Arguments = 10000 2 1000
transfer_input_files = forward_Bs_length.py
queue $(NumRuns)
#Arguments = 10000 2 2000
#transfer_input_files = forward_Bs_length.py
#queue $(NumRuns)
#Arguments = 10000 2 4000
#transfer_input_files = forward_Bs_length.py
#queue $(NumRuns)
#Arguments = 10000 2 6000
#transfer_input_files = forward_Bs_length.py
#queue $(NumRuns)
#Arguments = 10000 2 8000
#transfer_input_files = forward_Bs_length.py
#queue $(NumRuns)
#Arguments = 10000 2 10000
#transfer_input_files = forward_Bs_length.py
#queue $(NumRuns)
#Arguments = 10000 2 15000
#transfer_input_files = forward_Bs_length.py
#queue $(NumRuns)
#Arguments = 10000 2 20000
#transfer_input_files = forward_Bs_length.py
#queue $(NumRuns)
#Arguments = 10000 2 30000
#transfer_input_files = forward_Bs_length.py
#queue $(NumRuns)
#Arguments = 10000 2 40000
#transfer_input_files = forward_Bs_length.py
#queue $(NumRuns)
#Arguments = 10000 2 60000
#transfer_input_files = forward_Bs_length.py
#queue $(NumRuns)
#Arguments = 10000 2 80000
#transfer_input_files = forward_Bs_length.py
#queue $(NumRuns)
#Arguments = 10000 2 100000
#transfer_input_files = forward_Bs_length.py
#queue $(NumRuns)

Arguments = 10000 3 1000
transfer_input_files = forward_Bs_length.py
queue $(NumRuns)
#Arguments = 10000 3 2000
#transfer_input_files = forward_Bs_length.py
#queue $(NumRuns)
#Arguments = 10000 3 4000
#transfer_input_files = forward_Bs_length.py
#queue $(NumRuns)
#Arguments = 10000 3 6000
#transfer_input_files = forward_Bs_length.py
#queue $(NumRuns)
#Arguments = 10000 3 8000
#transfer_input_files = forward_Bs_length.py
#queue $(NumRuns)
#Arguments = 10000 3 10000
#transfer_input_files = forward_Bs_length.py
#queue $(NumRuns)
#Arguments = 10000 3 15000
#transfer_input_files = forward_Bs_length.py
#queue $(NumRuns)
#Arguments = 10000 3 20000
#transfer_input_files = forward_Bs_length.py
#queue $(NumRuns)
#Arguments = 10000 3 30000
#transfer_input_files = forward_Bs_length.py
#queue $(NumRuns)
#Arguments = 10000 3 40000
#transfer_input_files = forward_Bs_length.py
#queue $(NumRuns)
#Arguments = 10000 3 60000
#transfer_input_files = forward_Bs_length.py
#queue $(NumRuns)
#Arguments = 10000 3 80000
#transfer_input_files = forward_Bs_length.py
#queue $(NumRuns)
#Arguments = 10000 3 100000
#transfer_input_files = forward_Bs_length.py
#queue $(NumRuns)

Arguments = 10000 4 1000
transfer_input_files = forward_Bs_length.py
queue $(NumRuns)
#Arguments = 10000 4 2000
#transfer_input_files = forward_Bs_length.py
#queue $(NumRuns)
#Arguments = 10000 4 4000
#transfer_input_files = forward_Bs_length.py
#queue $(NumRuns)
#Arguments = 10000 4 6000
#transfer_input_files = forward_Bs_length.py
#queue $(NumRuns)
#Arguments = 10000 4 8000
#transfer_input_files = forward_Bs_length.py
#queue $(NumRuns)
#Arguments = 10000 4 10000
#transfer_input_files = forward_Bs_length.py
#queue $(NumRuns)
#Arguments = 10000 4 15000
#transfer_input_files = forward_Bs_length.py
#queue $(NumRuns)
#Arguments = 10000 4 20000
#transfer_input_files = forward_Bs_length.py
#queue $(NumRuns)
#Arguments = 10000 4 30000
#transfer_input_files = forward_Bs_length.py
#queue $(NumRuns)
#Arguments = 10000 4 40000
#transfer_input_files = forward_Bs_length.py
#queue $(NumRuns)
#Arguments = 10000 4 60000
#transfer_input_files = forward_Bs_length.py
#queue $(NumRuns)
#Arguments = 10000 4 80000
#transfer_input_files = forward_Bs_length.py
#queue $(NumRuns)
#Arguments = 10000 4 100000
#transfer_input_files = forward_Bs_length.py
#queue $(NumRuns)
